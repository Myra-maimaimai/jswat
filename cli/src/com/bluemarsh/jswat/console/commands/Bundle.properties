#
# The contents of this file are subject to the terms of the Common Development
# and Distribution License (the License). You may not use this file except in
# compliance with the License..
#
# You can obtain a copy of the License at http://www.netbeans.org/cddl.html
# or http://www.netbeans.org/cddl.txt.
#
# When distributing Covered Code, include this CDDL Header Notice in each file
# and include the License file at http://www.netbeans.org/cddl.txt.
# If applicable, add the following below the CDDL Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# The Original Software is JSwat. The Initial Developer of the Original
# Software is Nathan L. Fiedler. Portions created by Nathan L. Fiedler
# are Copyright (C) 2009. All Rights Reserved.
#
# Contributor(s): Nathan L. Fiedler.
#
# $Id$
#

clear_Description = Removes a breakpoint.
clear_Help = clear [<n>...|all|<class>:<line>|<class>.<method>[(argtype,...)]]\n\
Removes the breakpoints identified by the given unique numbers.\n\
Use the break command to list the breakpoints with their numbers.\n\
With 'all' argument, removes all breakpoints.\n\
With a single 'class:line' or 'class.method[(args)]' specification,\n\
removes the first breakpoint that exactly matches the specification.\n\
With no arguments, lists existing breakpoints.\n\
\n\
See also: break, disable, enable
CTL_Clear_Removed = Removed: {0}
ERR_Clear_NotFound = Breakpoint not matched: {0}

down_Description = Moves the current stack frame index downward.
down_Help = Syntax: down [<count>]\n\
Moves down the stack by one (or <count>) frame(s). Down means that\n\
the frame index value becomes lower.\n\
\n\
See also: frame, up

up_Description = Moves the current stack frame index upward.
up_Help = Syntax: up [<count>]\n\
Moves up the stack by one (or <count>) frame(s). Up means that\n\
the frame index value becomes higher.\n\
\n\
See also: down, frame

frame_Description = Changes the stack frame for the current thread.
frame_Help = Syntax: frame <index>\n\
Sets the given, zero-based, frame index as the current stack frame.\n\
\n\
See also: down, up

exit_Description = Closes all open sessions and exits the debugger.
exit_Help = Syntax: exit

send_Description = Sends the given input to the debuggee via System.in.
send_Help = Syntax: send [input]
ERR_send_Failed = Send failed due to I/O error

stop_Description = Creates a new breakpoint (for jdb compatibility).
stop_Help = Syntax: either of the 'stop' commands permitted in JDB:\n\
\t\t    stop in <class id>.<method>[(argument_type,...)]\n\
\t\t    stop at <class id>:<line>\n\
\t\tYou must specify 'in' or 'at' per JDB syntax.  The arguments are\n\
\t\ttransformed and passed to the JSwat 'break' command.\n\
\n\
See also: break

ERR_stop_syntax = Syntax: stop [in|at] [args...]

where_Description = Displays the call stack for one or all threads.
where_Help = Syntax: where [<thread-name> | all]\n\
Displays the call stack of the current thread, or with the\n\
name of a thread, displays the call stack for that thread. Use\n\
the 'all' keyword to show the stack for all threads.\n\
The 'pc' field refers to the byte code offset within a method.
CTL_where_header = {0}:

dump_Description = Prints an object\'s fields and their values.
dump_Help = Syntax: dump [<expr>]\n\
Prints the fields of an object reference and their field values.\n\
\n\
See also: fields, methods

list_Description = Shows source around next instruction to execute.
list_Help = Syntax: list [<line-number> | <method-name>]\n\
Displays the source code around the current single-step location.\n\
With no arguments, displays 11 lines around the current location.\n\
With a numeric argument, displays code around that line number.\n\
Any other argument is assumed to be a method name for which to\n\
display the source code.
See also: view, where

ERR_invalid_list_args = {0} is not a valid line number or method name for {1}
ERR_ambiguous_method = {0} is an ambiguous method name in {1}
ERR_no_line_info = Line number information not available at line {0}
ERR_list_not_ready = Command 'list' is not valid until the VM is started

CTL_expr_is_null = {0} = {1}\n
CTL_expr_is_value = {0} = {1}\n
