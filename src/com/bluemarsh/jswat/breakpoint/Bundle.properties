######################################################################
#
#       Copyright (C) 2001-2002 Nathan Fiedler
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
# PROJECT:      JSwat
# MODULE:       Breakpoints
# FILE:         Bundle.properties
#
# AUTHOR:       Nathan Fiedler
#
# REVISION HISTORY:
#       Name    Date            Description
#       ----    ----            -----------
#       nf      06/03/01        Initial version
#
# DESCRIPTION:
#       Resources for this package.
#
# $Id: Bundle.properties 629 2002-10-26 23:03:26Z nfiedler $
#
######################################################################

ambiguousClass = Class specification matches more than one class.

ambiguousMethod = Method is overloaded; please specify arguments.

breakpointHit = Hit breakpoint

brkOnlyInClass = Breakpoints cannot be set in interfaces or arrays.

conditionSatisFailed = Condition isSatisfied() failed:

exceptionThrown = Exception thrown.

invalidSyntax = Invalid breakpoint syntax.

noCodeAtLine = No code at that line in the class.

# User requested information where there was none.
noLineNumberInfo = There is no line number information for this class.

noSuchMethod = No matching method found in the class.

noSuchThreadFilter = Filter not applied - no thread by the identifier:

unknownError = Unexpected error:

# Breakpoints show this to indicate which threads will be suspended
# when the breakpoint is hit.
suspendAll = (suspend all threads)
suspendNone = (suspend no threads)
suspendThread = (suspend event thread)

traceEntered = entered
traceExited = exited

######################################################################
#               Breakpoint manager resources.
######################################################################
BreakManager.failedResolve = Failed breakpoint resolution
