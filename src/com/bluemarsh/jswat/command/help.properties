######################################################################
#
#       Copyright (C) 2002 Nathan Fiedler
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
# PROJECT:      JSwat
# MODULE:       Help Screens
# FILE:         help.properties
#
# AUTHOR:       Nathan Fiedler
#
# REVISION HISTORY:
#       Name    Date            Description
#       ----    ----            -----------
#       nf      01/09/02        Initial version
#
# DESCRIPTION:
#       Resources for the help system.
#
# $Id: help.properties 629 2002-10-26 23:03:26Z nfiedler $
#
######################################################################


header.1 = Please choose a category or command shown below:

footer.1 = Type 'u' to go up a level, 'm' to redisplay the menu, 'q' to exit.

top.subs = breakpoints threads objects commands classes \
           variables path stepping stack vm trace misc
top.1 = (1) breakpoints...          (7) path...
top.2 = (2) threads...              (8) stepping...
top.3 = (3) objects...              (9) stack...
top.4 = (4) commands...             (10) vm...
top.5 = (5) classes...              (11) trace...
top.6 = (6) variables...            (12) misc...

top.breakpoints.subs = _brkinfo _catch _clear _condition \
                       _disable _enable _filter _monitor _runto _stop
top.breakpoints.1 = (1) brkinfo         (6) enable
top.breakpoints.2 = (2) catch           (7) filter
top.breakpoints.3 = (3) clear           (8) monitor
top.breakpoints.4 = (4) condition       (9) runto
top.breakpoints.5 = (5) disable         (10) stop

top.threads.subs = _interrupt _kill _resume _suspend _thread \
                   _threadgroups _threadlocks _threads
top.threads.1 = (1) interrupt           (5) thread
top.threads.2 = (2) kill                (6) threadgroups
top.threads.3 = (3) resume              (7) threadlocks
top.threads.4 = (4) suspend             (8) threads

top.objects.subs = _dump _disablegc _enablegc _invoke _lock _print
top.objects.1 = (1) dump                (4) invoke
top.objects.2 = (2) disablegc           (5) lock
top.objects.3 = (3) enablegc            (6) print

top.commands.subs = _alias _apropos _help _history _macro _read _unalias
top.commands.1 = The following are special command invocation options:
top.commands.2 = \t!!\t\twill execute the most recent command.
top.commands.3 = \t!<prefix>\twill execute the most recent matching command.
top.commands.4 = \t<n> <command>\twill run the command 'n' times.
top.commands.5 = \t
top.commands.6 = (1) alias              (5) macro
top.commands.7 = (2) apropos            (6) read
top.commands.8 = (3) help               (7) unalias
top.commadns.9 = (4) history

top.classes.subs = _class _classes _fields _invoke _lines _methods _view
top.classes.1 = (1) class               (5) lines
top.classes.2 = (2) classes             (6) methods
top.classes.3 = (3) fields              (7) view
top.classes.4 = (4) invoke

top.variables.subs = _locals _set
top.variables.1 = (1) locals            (2) set

top.path.subs = _classpath _sourcepath
top.path.1 = (1) classpath              (2) sourcepath

top.stepping.subs = _exclude _list _next _nexti _step _stepi
top.stepping.1 = (1) exclude            (4) nexti
top.stepping.2 = (2) list               (5) step
top.stepping.3 = (3) next               (6) stepi

top.stack.subs = _down _frame _up _where _wherei
top.stack.1 = (1) down          (4) where
top.stack.2 = (2) frame         (5) wherei
top.stack.3 = (3) up

top.vm.subs = _attach _close _kill _listen _load _resume _run _suspend _vmlist
top.vm.1 = (1) attach           (6) resume
top.vm.2 = (2) close            (7) run
top.vm.3 = (3) kill             (8) suspend
top.vm.4 = (4) listen           (9) vmlist
top.vm.5 = (5) load

top.trace.subs = _trace
top.trace.1 = (1) trace

top.misc.subs = _about _exit _options _stderr _stdin _stdout _version
top.misc.1 = (1) about          (5) stdin
top.misc.2 = (2) exit           (6) stdout
top.misc.3 = (3) options        (7) version
top.misc.4 = (4) stderr
