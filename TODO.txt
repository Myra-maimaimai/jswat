JSWAT TASK LIST
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$Id$

- Console mode
  - Show a few lines of source code each time a breakpoint is hit
  - Show a single line of source code for each single step
  - Lacking a way to send input to the debuggee stdin stream
    - SendCommand is the starting point
    - OutputAdapter has the means, but nothing to read from
  - Commands to be implemented
    - catch
    - commands: assign monitors to breakpoints (list if no arguments)
    - condition: assign condition to breakpoints (list if no arguments)
    - ignore
    - classes
    - exclude (manage stepping excludes)
    - fields
    - filters: assign thread/class filters to breakpoints (list if no args)
    - locals
    - methods
    - up [n]
    - down [n]
    - threadgroups
    - monitor
    - unmonitor
    - watch
    - unwatch
    - session create|copy|rename|delete
    - redefine
    - interrupt
    - eval
    - send (sends input to debuggee)
    - Setting class load/unload breakpoints
    - Setting thread start/stop breakpoints
  - Read commands from RC-like file during startup
    - Look for .jswatrc and jswat.ini in user.home and user.dir
  - Define logging properties for the console mode so log messages are
    saved to the userdir
  - Add help categories, as in gdb, for describing sets of commands

- Search for all TODO/XXX items and resolve or file bugs

- Make sure tools.jar is in the classpath of all of the projects
  - Mac has it in the classes.jar already
  - Test in another OS in VirtualBox

- Fix distributable/installer build

- Documentation updates
  - Explain how the modules build and how the suite is set up
    - Link to http://wiki.netbeans.org/DevFaqWrapperModules
  - For each new external library added, need to add a class-path-extension
    to the nbcore/nbproject/project.xml so that it can be found
  - docs/dev/platform.html
    - Copy new org-openide-util.jar from NetBeans/platform
    - The org-openide-util.jar is not used when running in NetBeans
  - Write a tutorial on using the console interface
    - Command line arguments are interpreted as command input
    - A unique prefix for a command will invoke that command (e.g. hi => history)
    - RC-like file for commands that are executed at startup
      - Looks for .jswatrc and jswat.ini in user.home and user.dir
    - Using runtime command to set Java runtimes for session
