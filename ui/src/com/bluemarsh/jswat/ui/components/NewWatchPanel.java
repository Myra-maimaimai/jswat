/*
 * The contents of this file are subject to the terms of the Common Development
 * and Distribution License (the License). You may not use this file except in
 * compliance with the License.
 *
 * You can obtain a copy of the License at http://www.netbeans.org/cddl.html
 * or http://www.netbeans.org/cddl.txt.
 *
 * When distributing Covered Code, include this CDDL Header Notice in each file
 * and include the License file at http://www.netbeans.org/cddl.txt.
 * If applicable, add the following below the CDDL Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * The Original Software is JSwat. The Initial Developer of the Original
 * Software is Nathan L. Fiedler. Portions created by Nathan L. Fiedler
 * are Copyright (C) 2006-2007. All Rights Reserved.
 *
 * Contributor(s): Nathan L. Fiedler.
 *
 * $Id$
 */

package com.bluemarsh.jswat.ui.components;

import javax.swing.JPanel;

/**
 * Panel for creating a new watch point in the Watches view.
 *
 * @author  Nathan Fiedler
 */
public class NewWatchPanel extends JPanel {
    /** silence the compiler warnings */
    private static final long serialVersionUID = 1L;

    /**
     * Creates new form NewWatchPanel.
     */
    public NewWatchPanel() {
        initComponents();
    }

    /**
     * Return the expression entered by the user.
     *
     * @return  expression.
     */
    public String getExpression() {
        return exprTextField.getText();
    }

    /**
     * Indicate if the watch is to be a fixed watch.
     *
     * @return  true if fixed, false otherwise.
     */
    public boolean isFixed() {
        return fixedCheckBox.isSelected();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        exprLabel = new javax.swing.JLabel();
        exprTextField = new javax.swing.JTextField();
        fixedCheckBox = new javax.swing.JCheckBox();

        exprLabel.setDisplayedMnemonic(java.util.ResourceBundle.getBundle("com/bluemarsh/jswat/ui/components/Forms").getString("KEY_NewWatch_Expression").charAt(0));
        exprLabel.setLabelFor(exprTextField);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/bluemarsh/jswat/ui/components/Forms"); // NOI18N
        exprLabel.setText(bundle.getString("LBL_NewWatch_Expression")); // NOI18N

        exprTextField.setColumns(20);
        exprTextField.setToolTipText(bundle.getString("HINT_NewWatch_Expression")); // NOI18N

        fixedCheckBox.setMnemonic(java.util.ResourceBundle.getBundle("com/bluemarsh/jswat/ui/components/Forms").getString("KEY_NewWatch_Fixed").charAt(0));
        fixedCheckBox.setText(bundle.getString("LBL_NewWatch_Fixed")); // NOI18N
        fixedCheckBox.setToolTipText(bundle.getString("HINT_NewWatch_Fixed")); // NOI18N
        fixedCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        fixedCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(exprLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exprTextField))
                    .addComponent(fixedCheckBox))
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exprLabel)
                    .addComponent(exprTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fixedCheckBox)
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel exprLabel;
    private javax.swing.JTextField exprTextField;
    private javax.swing.JCheckBox fixedCheckBox;
    // End of variables declaration//GEN-END:variables
}
