/*
 *                     Sun Public License Notice.
 *
 * The contents of this file are subject to the Sun Public License
 * Version 1.0 (the "License"); you may not use this file except in
 * compliance with the License. A copy of the License is available at
 * http://www.sun.com/
 *
 * The Original Code is the JSwat Core module. The Initial Developer of the
 * Original Code is Nathan L. Fiedler. Portions created by Nathan L. Fiedler
 * are Copyright (C) 2005-2006. All Rights Reserved.
 *
 * Contributor(s): Nathan L. Fiedler.
 *
 * $Id: SteppingExcludesPanel.java 15 2007-06-03 00:01:17Z nfiedler $
 */

package com.bluemarsh.jswat.core;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JPanel;
import javax.swing.event.ListDataListener;

/**
 * Panel for editing the single-stepping exclusions.
 *
 * @author  Nathan Fiedler
 */
public class SteppingExcludesPanel extends JPanel implements ActionListener {
    /** serial version UID */
    private static final long serialVersionUID = 1L;

    /**
     * Creates new form SteppingExcludesPanel.
     */
    public SteppingExcludesPanel() {
        initComponents();
        // Set the model to something we can work with.
        excludesList.setModel(new DefaultListModel());
        addButton.addActionListener(this);
        removeButton.addActionListener(this);
    }

    /**
     * Invoked when an action occurs.
     *
     * @param  event  action event.
     */
    public void actionPerformed(ActionEvent event) {
        Object src = event.getSource();
        if (src == addButton) {
            String excl = addTextField.getText();
            if (excl.length() > 0) {
                DefaultListModel model = (DefaultListModel) excludesList.getModel();
                model.addElement(excl);
                addTextField.setText("");
            }
        } else if (src == removeButton) {
            DefaultListModel model = (DefaultListModel) excludesList.getModel();
            int[] selections = excludesList.getSelectedIndices();
            for (int ii = selections.length - 1; ii >= 0; ii--) {
                model.remove(selections[ii]);
            }
        }
    }

    /**
     * Adds a listener to the list that's notified each time a change to
     * the data model occurs.
     *
     * @param  l  list data listener to add.
     */
    public void addListDataListener(ListDataListener l) {
        excludesList.getModel().addListDataListener(l);
    }

    /**
     * Get the edited list of single-stepping exclusions.
     *
     * @return  list of single-stepping exclusions.
     */
    public List<String> getValues() {
        DefaultListModel model = (DefaultListModel) excludesList.getModel();
        Enumeration enmr = model.elements();
        List<String> list = new ArrayList<String>(model.getSize());
        while (enmr.hasMoreElements()) {
            String excl = (String) enmr.nextElement();
            list.add(excl);
        }
        return list;
    }

    /**
     * Set the list of single-stepping exclusions to be edited.
     *
     * @param  excludes  list of single-stepping exclusions.
     */
    public void setValues(Object excludes) {
        if (excludes == null) {
            excludes = Collections.emptyList();
        }
        DefaultListModel model = (DefaultListModel) excludesList.getModel();
        model.clear();
        if (excludes instanceof List) {
            List exclList = (List) excludes;
            Iterator iter = exclList.iterator();
            while (iter.hasNext()) {
                String excl = (String) iter.next();
                model.addElement(excl);
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        addLabel = new javax.swing.JLabel();
        addTextField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        excludesScrollPane = new javax.swing.JScrollPane();
        excludesList = new javax.swing.JList();
        removeButton = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(12, 12, 12, 12));
        addLabel.setDisplayedMnemonic(java.util.ResourceBundle.getBundle("com/bluemarsh/jswat/core/Form").getString("KEY_Excludes_AddLabel").charAt(0));
        addLabel.setLabelFor(addTextField);
        addLabel.setText(java.util.ResourceBundle.getBundle("com/bluemarsh/jswat/core/Form").getString("LBL_Excludes_AddLabel"));

        addTextField.setColumns(10);
        addTextField.setToolTipText(java.util.ResourceBundle.getBundle("com/bluemarsh/jswat/core/Form").getString("HINT_Excludes_AddField"));

        addButton.setMnemonic(java.util.ResourceBundle.getBundle("com/bluemarsh/jswat/core/Form").getString("KEY_Excludes_Add").charAt(0));
        addButton.setText(java.util.ResourceBundle.getBundle("com/bluemarsh/jswat/core/Form").getString("LBL_Excludes_Add"));

        excludesScrollPane.setViewportView(excludesList);

        removeButton.setMnemonic(java.util.ResourceBundle.getBundle("com/bluemarsh/jswat/core/Form").getString("KEY_Excludes_Remove").charAt(0));
        removeButton.setText(java.util.ResourceBundle.getBundle("com/bluemarsh/jswat/core/Form").getString("LBL_Excludes_Remove"));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(addLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(addTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE))
                    .add(excludesScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(removeButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(addButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(addLabel)
                    .add(addButton)
                    .add(addTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(excludesScrollPane)
                    .add(removeButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JLabel addLabel;
    private javax.swing.JTextField addTextField;
    private javax.swing.JList excludesList;
    private javax.swing.JScrollPane excludesScrollPane;
    private javax.swing.JButton removeButton;
    // End of variables declaration//GEN-END:variables
    
}
