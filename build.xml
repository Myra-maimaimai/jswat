<?xml version="1.0"?>
<!--
        Copyright (C) 2001-2014 Nathan Fiedler

  Use Apache Ant to process this build file and create a build of JSwat.
  See the docs/dev/build.html page to learn more about making builds.
-->

<project name="JSwat" default="build" basedir=".">

  <!-- Set all the build properties. -->
  <property file="build.properties"/>
  <property name="source" value="src"/>
  <property name="ext.dir" value="lib"/>
  <property name="classes" value="build/classes"/>
  <property name="bindist" value="build/dist"/>
  <property name="tests" value="build/test"/>
  <property name="pkgname" value="com.bluemarsh.jswat"/>
  <property name="pkgpath" value="com/bluemarsh/jswat"/>
  <property name="compile.debug" value="on"/>
  <property name="compile.deprecation" value="on"/>
  <property name="compile.source" value="1.3"/>
  <property name="compile.target" value="1.2"/>

  <!-- Set the classpath. -->
  <path id="class.path">
    <!-- To compile with JDK 1.2, change the following to jpda.jar -->
    <pathelement location="${java.home}/../lib/tools.jar"/>
    <pathelement location="build/classes"/>
    <fileset dir="${ext.dir}">
      <include name="*.jar"/>
    </fileset>
  </path>

  <target name="prepare">
    <mkdir dir="${classes}"/>
    <mkdir dir="${bindist}"/>
    <mkdir dir="${tests}"/>
  </target>

  <target name="all" depends="clean,build" description="Clean and build."/>

  <target name="clean" description="Removes build artifacts.">
    <delete dir="${classes}"/>
    <delete dir="${bindist}"/>
    <delete dir="${tests}"/>
    <delete>
      <fileset dir="." includes="*.zip"/>
    </delete>
  </target>

  <target name="build" depends="prepare" description="Build project.">
    <javac srcdir="${source}" destdir="${classes}" debug="${compile.debug}"
           classpathref="class.path" source="${compile.source}"
           target="${compile.target}" deprecation="${compile.deprecation}"/>
    <copy todir="${classes}/${pkgpath}/resources">
      <fileset dir="${source}/${pkgpath}/resources"/>
    </copy>
    <copy todir="${classes}/${pkgpath}/ui/resources">
      <fileset dir="${source}/${pkgpath}/ui/resources"/>
    </copy>
    <!-- Make sure to get all of the properties files. -->
    <copy todir="${classes}">
      <fileset dir="${source}" includes="com/**/*.properties"/>
    </copy>
    <!-- Get the Java parser dat files. -->
    <copy todir="${classes}">
      <fileset dir="${source}" includes="com/**/*.dat"/>
    </copy>

    <!-- Compile the test classes. -->
    <javac srcdir="test/src" destdir="${tests}" debug="${compile.debug}"
           source="${compile.source}" target="${compile.target}"
           deprecation="${compile.deprecation}"/>
  </target>

  <!-- Get the release version number from the builder. -->
  <target name="version" depends="build">
    <!-- Newer Ant releases only ask if 'version' is not set. -->
    <input message="Enter JSwat version number (x.y[.z]):"
           addproperty="version"/>
    <!-- Update the version.properties file for this build. -->
    <propertyfile file="${classes}/${pkgpath}/util/version.properties">
      <entry key="version" value="${version}"/>
    </propertyfile>
  </target>

  <!-- Make the binary distribution. -->
  <target name="dist" depends="version" description="Produces the release.">
    <!-- Make the jar file. -->
    <mkdir dir="${bindist}"/>
    <jar jarfile="${bindist}/jswat.jar" basedir="${classes}">
      <exclude name="**/test/**"/>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Class-Path" value="parser.jar"/>
        <attribute name="Main-Class" value="com.bluemarsh.jswat.Main"/>
      </manifest>
    </jar>

    <zip destfile="jswat-${version}.zip">
      <zipfileset dir="." prefix="jswat-${version}">
        <include name="*.txt"/>
        <include name="*.html"/>
      </zipfileset>
      <zipfileset file="${bindist}/jswat.jar" prefix="jswat-${version}"/>
      <zipfileset dir="${ext.dir}" includes="*.jar" prefix="jswat-${version}"/>
      <zipfileset dir="docs" prefix="jswat-${version}/docs"/>
    </zip>

    <!-- Make the source distribution. -->
    <zip destfile="jswat-src-${version}.zip">
      <zipfileset dir="." prefix="jswat-${version}">
        <exclude name="*.zip"/>
        <exclude name="build/**"/>
        <exclude name="build.properties"/>
        <exclude name="nbproject/**"/>
      </zipfileset>
    </zip>

    <!-- Calculate the file checksums. -->
    <checksum file="jswat-${version}.zip" algorithm="SHA" property="sum"/>
    <echo level="info">${sum}  jswat-${version}.zip</echo>
    <!-- Work-around apparent checksum bug by using a different property. -->
    <checksum file="jswat-src-${version}.zip" algorithm="SHA" property="sum2"/>
    <echo level="info">${sum2}  jswat-src-${version}.zip</echo>
  </target>

  <target name="run" depends="build" description="Run the project.">
    <java classname="com.bluemarsh.jswat.Main" fork="yes"
          classpathref="class.path"/>
  </target>

  <target name="debug" depends="build" description="Debug the project.">
    <java classname="com.bluemarsh.jswat.Main" fork="yes"
          classpathref="class.path">
      <jvmarg value="-Xdebug"/>
      <jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5858"/>
    </java>
  </target>
</project>
